// Copyright (c) 2021 Al Azif
// License: GPLv3

#ifndef PKG_TEST_HPP_
#define PKG_TEST_HPP_

#include "pkg.hpp"
#include "testing.hpp"

#include <gtest/gtest.h>

TEST(pkgTest, getEntryNameByType) {
  // Valid
  EXPECT_EQ("license.dat", pkg::get_entry_name_by_type(0x0400));
  EXPECT_EQ("license.info", pkg::get_entry_name_by_type(0x0401));
  EXPECT_EQ("nptitle.dat", pkg::get_entry_name_by_type(0x0402));
  EXPECT_EQ("npbind.dat", pkg::get_entry_name_by_type(0x0403));
  EXPECT_EQ("selfinfo.dat", pkg::get_entry_name_by_type(0x0404));
  EXPECT_EQ("imageinfo.dat", pkg::get_entry_name_by_type(0x0406));
  EXPECT_EQ("target-deltainfo.dat", pkg::get_entry_name_by_type(0x0407));
  EXPECT_EQ("origin-deltainfo.dat", pkg::get_entry_name_by_type(0x0408));
  EXPECT_EQ("psreserved.dat", pkg::get_entry_name_by_type(0x0409));
  EXPECT_EQ("param.sfo", pkg::get_entry_name_by_type(0x1000));
  EXPECT_EQ("playgo-chunk.dat", pkg::get_entry_name_by_type(0x1001));
  EXPECT_EQ("playgo-chunk.sha", pkg::get_entry_name_by_type(0x1002));
  EXPECT_EQ("playgo-manifest.xml", pkg::get_entry_name_by_type(0x1003));
  EXPECT_EQ("pronunciation.xml", pkg::get_entry_name_by_type(0x1004));
  EXPECT_EQ("pronunciation.sig", pkg::get_entry_name_by_type(0x1005));
  EXPECT_EQ("pic1.png", pkg::get_entry_name_by_type(0x1006));
  EXPECT_EQ("pubtoolinfo.dat", pkg::get_entry_name_by_type(0x1007));
  EXPECT_EQ("app/playgo-chunk.dat", pkg::get_entry_name_by_type(0x1008));
  EXPECT_EQ("app/playgo-chunk.sha", pkg::get_entry_name_by_type(0x1009));
  EXPECT_EQ("app/playgo-manifest.xml", pkg::get_entry_name_by_type(0x100A));
  EXPECT_EQ("shareparam.json", pkg::get_entry_name_by_type(0x100B));
  EXPECT_EQ("shareoverlayimage.png", pkg::get_entry_name_by_type(0x100C));
  EXPECT_EQ("save_data.png", pkg::get_entry_name_by_type(0x100D));
  EXPECT_EQ("shareprivacyguardimage.png", pkg::get_entry_name_by_type(0x100E));
  EXPECT_EQ("icon0.png", pkg::get_entry_name_by_type(0x1200));
  EXPECT_EQ("icon0_00.png", pkg::get_entry_name_by_type(0x1201));
  EXPECT_EQ("icon0_01.png", pkg::get_entry_name_by_type(0x1202));
  EXPECT_EQ("icon0_02.png", pkg::get_entry_name_by_type(0x1203));
  EXPECT_EQ("icon0_03.png", pkg::get_entry_name_by_type(0x1204));
  EXPECT_EQ("icon0_04.png", pkg::get_entry_name_by_type(0x1205));
  EXPECT_EQ("icon0_05.png", pkg::get_entry_name_by_type(0x1206));
  EXPECT_EQ("icon0_06.png", pkg::get_entry_name_by_type(0x1207));
  EXPECT_EQ("icon0_07.png", pkg::get_entry_name_by_type(0x1208));
  EXPECT_EQ("icon0_08.png", pkg::get_entry_name_by_type(0x1209));
  EXPECT_EQ("icon0_09.png", pkg::get_entry_name_by_type(0x120A));
  EXPECT_EQ("icon0_10.png", pkg::get_entry_name_by_type(0x120B));
  EXPECT_EQ("icon0_11.png", pkg::get_entry_name_by_type(0x120C));
  EXPECT_EQ("icon0_12.png", pkg::get_entry_name_by_type(0x120D));
  EXPECT_EQ("icon0_13.png", pkg::get_entry_name_by_type(0x120E));
  EXPECT_EQ("icon0_14.png", pkg::get_entry_name_by_type(0x120F));
  EXPECT_EQ("icon0_15.png", pkg::get_entry_name_by_type(0x1210));
  EXPECT_EQ("icon0_16.png", pkg::get_entry_name_by_type(0x1211));
  EXPECT_EQ("icon0_17.png", pkg::get_entry_name_by_type(0x1212));
  EXPECT_EQ("icon0_18.png", pkg::get_entry_name_by_type(0x1213));
  EXPECT_EQ("icon0_19.png", pkg::get_entry_name_by_type(0x1214));
  EXPECT_EQ("icon0_20.png", pkg::get_entry_name_by_type(0x1215));
  EXPECT_EQ("icon0_21.png", pkg::get_entry_name_by_type(0x1216));
  EXPECT_EQ("icon0_22.png", pkg::get_entry_name_by_type(0x1217));
  EXPECT_EQ("icon0_23.png", pkg::get_entry_name_by_type(0x1218));
  EXPECT_EQ("icon0_24.png", pkg::get_entry_name_by_type(0x1219));
  EXPECT_EQ("icon0_25.png", pkg::get_entry_name_by_type(0x121A));
  EXPECT_EQ("icon0_26.png", pkg::get_entry_name_by_type(0x121B));
  EXPECT_EQ("icon0_27.png", pkg::get_entry_name_by_type(0x121C));
  EXPECT_EQ("icon0_28.png", pkg::get_entry_name_by_type(0x121D));
  EXPECT_EQ("icon0_29.png", pkg::get_entry_name_by_type(0x121E));
  EXPECT_EQ("icon0_30.png", pkg::get_entry_name_by_type(0x121F));
  EXPECT_EQ("pic0.png", pkg::get_entry_name_by_type(0x1220));
  EXPECT_EQ("snd0.at9", pkg::get_entry_name_by_type(0x1240));
  EXPECT_EQ("pic1_00.png", pkg::get_entry_name_by_type(0x1241));
  EXPECT_EQ("pic1_01.png", pkg::get_entry_name_by_type(0x1242));
  EXPECT_EQ("pic1_02.png", pkg::get_entry_name_by_type(0x1243));
  EXPECT_EQ("pic1_03.png", pkg::get_entry_name_by_type(0x1244));
  EXPECT_EQ("pic1_04.png", pkg::get_entry_name_by_type(0x1245));
  EXPECT_EQ("pic1_05.png", pkg::get_entry_name_by_type(0x1246));
  EXPECT_EQ("pic1_06.png", pkg::get_entry_name_by_type(0x1247));
  EXPECT_EQ("pic1_07.png", pkg::get_entry_name_by_type(0x1248));
  EXPECT_EQ("pic1_08.png", pkg::get_entry_name_by_type(0x1249));
  EXPECT_EQ("pic1_09.png", pkg::get_entry_name_by_type(0x124A));
  EXPECT_EQ("pic1_10.png", pkg::get_entry_name_by_type(0x124B));
  EXPECT_EQ("pic1_11.png", pkg::get_entry_name_by_type(0x124C));
  EXPECT_EQ("pic1_12.png", pkg::get_entry_name_by_type(0x124D));
  EXPECT_EQ("pic1_13.png", pkg::get_entry_name_by_type(0x124E));
  EXPECT_EQ("pic1_14.png", pkg::get_entry_name_by_type(0x124F));
  EXPECT_EQ("pic1_15.png", pkg::get_entry_name_by_type(0x1250));
  EXPECT_EQ("pic1_16.png", pkg::get_entry_name_by_type(0x1251));
  EXPECT_EQ("pic1_17.png", pkg::get_entry_name_by_type(0x1252));
  EXPECT_EQ("pic1_18.png", pkg::get_entry_name_by_type(0x1253));
  EXPECT_EQ("pic1_19.png", pkg::get_entry_name_by_type(0x1254));
  EXPECT_EQ("pic1_20.png", pkg::get_entry_name_by_type(0x1255));
  EXPECT_EQ("pic1_21.png", pkg::get_entry_name_by_type(0x1256));
  EXPECT_EQ("pic1_22.png", pkg::get_entry_name_by_type(0x1257));
  EXPECT_EQ("pic1_23.png", pkg::get_entry_name_by_type(0x1258));
  EXPECT_EQ("pic1_24.png", pkg::get_entry_name_by_type(0x1259));
  EXPECT_EQ("pic1_25.png", pkg::get_entry_name_by_type(0x125A));
  EXPECT_EQ("pic1_26.png", pkg::get_entry_name_by_type(0x125B));
  EXPECT_EQ("pic1_27.png", pkg::get_entry_name_by_type(0x125C));
  EXPECT_EQ("pic1_28.png", pkg::get_entry_name_by_type(0x125D));
  EXPECT_EQ("pic1_29.png", pkg::get_entry_name_by_type(0x125E));
  EXPECT_EQ("pic1_30.png", pkg::get_entry_name_by_type(0x125F));
  EXPECT_EQ("changeinfo/changeinfo.xml", pkg::get_entry_name_by_type(0x1260));
  EXPECT_EQ("changeinfo/changeinfo_00.xml", pkg::get_entry_name_by_type(0x1261));
  EXPECT_EQ("changeinfo/changeinfo_01.xml", pkg::get_entry_name_by_type(0x1262));
  EXPECT_EQ("changeinfo/changeinfo_02.xml", pkg::get_entry_name_by_type(0x1263));
  EXPECT_EQ("changeinfo/changeinfo_03.xml", pkg::get_entry_name_by_type(0x1264));
  EXPECT_EQ("changeinfo/changeinfo_04.xml", pkg::get_entry_name_by_type(0x1265));
  EXPECT_EQ("changeinfo/changeinfo_05.xml", pkg::get_entry_name_by_type(0x1266));
  EXPECT_EQ("changeinfo/changeinfo_06.xml", pkg::get_entry_name_by_type(0x1267));
  EXPECT_EQ("changeinfo/changeinfo_07.xml", pkg::get_entry_name_by_type(0x1268));
  EXPECT_EQ("changeinfo/changeinfo_08.xml", pkg::get_entry_name_by_type(0x1269));
  EXPECT_EQ("changeinfo/changeinfo_09.xml", pkg::get_entry_name_by_type(0x126A));
  EXPECT_EQ("changeinfo/changeinfo_10.xml", pkg::get_entry_name_by_type(0x126B));
  EXPECT_EQ("changeinfo/changeinfo_11.xml", pkg::get_entry_name_by_type(0x126C));
  EXPECT_EQ("changeinfo/changeinfo_12.xml", pkg::get_entry_name_by_type(0x126D));
  EXPECT_EQ("changeinfo/changeinfo_13.xml", pkg::get_entry_name_by_type(0x126E));
  EXPECT_EQ("changeinfo/changeinfo_14.xml", pkg::get_entry_name_by_type(0x126F));
  EXPECT_EQ("changeinfo/changeinfo_15.xml", pkg::get_entry_name_by_type(0x1270));
  EXPECT_EQ("changeinfo/changeinfo_16.xml", pkg::get_entry_name_by_type(0x1271));
  EXPECT_EQ("changeinfo/changeinfo_17.xml", pkg::get_entry_name_by_type(0x1272));
  EXPECT_EQ("changeinfo/changeinfo_18.xml", pkg::get_entry_name_by_type(0x1273));
  EXPECT_EQ("changeinfo/changeinfo_19.xml", pkg::get_entry_name_by_type(0x1274));
  EXPECT_EQ("changeinfo/changeinfo_20.xml", pkg::get_entry_name_by_type(0x1275));
  EXPECT_EQ("changeinfo/changeinfo_21.xml", pkg::get_entry_name_by_type(0x1276));
  EXPECT_EQ("changeinfo/changeinfo_22.xml", pkg::get_entry_name_by_type(0x1277));
  EXPECT_EQ("changeinfo/changeinfo_23.xml", pkg::get_entry_name_by_type(0x1278));
  EXPECT_EQ("changeinfo/changeinfo_24.xml", pkg::get_entry_name_by_type(0x1279));
  EXPECT_EQ("changeinfo/changeinfo_25.xml", pkg::get_entry_name_by_type(0x127A));
  EXPECT_EQ("changeinfo/changeinfo_26.xml", pkg::get_entry_name_by_type(0x127B));
  EXPECT_EQ("changeinfo/changeinfo_27.xml", pkg::get_entry_name_by_type(0x127C));
  EXPECT_EQ("changeinfo/changeinfo_28.xml", pkg::get_entry_name_by_type(0x127D));
  EXPECT_EQ("changeinfo/changeinfo_29.xml", pkg::get_entry_name_by_type(0x127E));
  EXPECT_EQ("changeinfo/changeinfo_30.xml", pkg::get_entry_name_by_type(0x127F));
  EXPECT_EQ("icon0.dds", pkg::get_entry_name_by_type(0x1280));
  EXPECT_EQ("icon0_00.dds", pkg::get_entry_name_by_type(0x1281));
  EXPECT_EQ("icon0_01.dds", pkg::get_entry_name_by_type(0x1282));
  EXPECT_EQ("icon0_02.dds", pkg::get_entry_name_by_type(0x1283));
  EXPECT_EQ("icon0_03.dds", pkg::get_entry_name_by_type(0x1284));
  EXPECT_EQ("icon0_04.dds", pkg::get_entry_name_by_type(0x1285));
  EXPECT_EQ("icon0_05.dds", pkg::get_entry_name_by_type(0x1286));
  EXPECT_EQ("icon0_06.dds", pkg::get_entry_name_by_type(0x1287));
  EXPECT_EQ("icon0_07.dds", pkg::get_entry_name_by_type(0x1288));
  EXPECT_EQ("icon0_08.dds", pkg::get_entry_name_by_type(0x1289));
  EXPECT_EQ("icon0_09.dds", pkg::get_entry_name_by_type(0x128A));
  EXPECT_EQ("icon0_10.dds", pkg::get_entry_name_by_type(0x128B));
  EXPECT_EQ("icon0_11.dds", pkg::get_entry_name_by_type(0x128C));
  EXPECT_EQ("icon0_12.dds", pkg::get_entry_name_by_type(0x128D));
  EXPECT_EQ("icon0_13.dds", pkg::get_entry_name_by_type(0x128E));
  EXPECT_EQ("icon0_14.dds", pkg::get_entry_name_by_type(0x128F));
  EXPECT_EQ("icon0_15.dds", pkg::get_entry_name_by_type(0x1290));
  EXPECT_EQ("icon0_16.dds", pkg::get_entry_name_by_type(0x1291));
  EXPECT_EQ("icon0_17.dds", pkg::get_entry_name_by_type(0x1292));
  EXPECT_EQ("icon0_18.dds", pkg::get_entry_name_by_type(0x1293));
  EXPECT_EQ("icon0_19.dds", pkg::get_entry_name_by_type(0x1294));
  EXPECT_EQ("icon0_20.dds", pkg::get_entry_name_by_type(0x1295));
  EXPECT_EQ("icon0_21.dds", pkg::get_entry_name_by_type(0x1296));
  EXPECT_EQ("icon0_22.dds", pkg::get_entry_name_by_type(0x1297));
  EXPECT_EQ("icon0_23.dds", pkg::get_entry_name_by_type(0x1298));
  EXPECT_EQ("icon0_24.dds", pkg::get_entry_name_by_type(0x1299));
  EXPECT_EQ("icon0_25.dds", pkg::get_entry_name_by_type(0x129A));
  EXPECT_EQ("icon0_26.dds", pkg::get_entry_name_by_type(0x129B));
  EXPECT_EQ("icon0_27.dds", pkg::get_entry_name_by_type(0x129C));
  EXPECT_EQ("icon0_28.dds", pkg::get_entry_name_by_type(0x129D));
  EXPECT_EQ("icon0_29.dds", pkg::get_entry_name_by_type(0x129E));
  EXPECT_EQ("icon0_30.dds", pkg::get_entry_name_by_type(0x129F));
  EXPECT_EQ("pic0.dds", pkg::get_entry_name_by_type(0x12A0));
  EXPECT_EQ("pic1.dds", pkg::get_entry_name_by_type(0x12C0));
  EXPECT_EQ("pic1_00.dds", pkg::get_entry_name_by_type(0x12C1));
  EXPECT_EQ("pic1_01.dds", pkg::get_entry_name_by_type(0x12C2));
  EXPECT_EQ("pic1_02.dds", pkg::get_entry_name_by_type(0x12C3));
  EXPECT_EQ("pic1_03.dds", pkg::get_entry_name_by_type(0x12C4));
  EXPECT_EQ("pic1_04.dds", pkg::get_entry_name_by_type(0x12C5));
  EXPECT_EQ("pic1_05.dds", pkg::get_entry_name_by_type(0x12C6));
  EXPECT_EQ("pic1_06.dds", pkg::get_entry_name_by_type(0x12C7));
  EXPECT_EQ("pic1_07.dds", pkg::get_entry_name_by_type(0x12C8));
  EXPECT_EQ("pic1_08.dds", pkg::get_entry_name_by_type(0x12C9));
  EXPECT_EQ("pic1_09.dds", pkg::get_entry_name_by_type(0x12CA));
  EXPECT_EQ("pic1_10.dds", pkg::get_entry_name_by_type(0x12CB));
  EXPECT_EQ("pic1_11.dds", pkg::get_entry_name_by_type(0x12CC));
  EXPECT_EQ("pic1_12.dds", pkg::get_entry_name_by_type(0x12CD));
  EXPECT_EQ("pic1_13.dds", pkg::get_entry_name_by_type(0x12CE));
  EXPECT_EQ("pic1_14.dds", pkg::get_entry_name_by_type(0x12CF));
  EXPECT_EQ("pic1_15.dds", pkg::get_entry_name_by_type(0x12D0));
  EXPECT_EQ("pic1_16.dds", pkg::get_entry_name_by_type(0x12D1));
  EXPECT_EQ("pic1_17.dds", pkg::get_entry_name_by_type(0x12D2));
  EXPECT_EQ("pic1_18.dds", pkg::get_entry_name_by_type(0x12D3));
  EXPECT_EQ("pic1_19.dds", pkg::get_entry_name_by_type(0x12D4));
  EXPECT_EQ("pic1_20.dds", pkg::get_entry_name_by_type(0x12D5));
  EXPECT_EQ("pic1_21.dds", pkg::get_entry_name_by_type(0x12D6));
  EXPECT_EQ("pic1_22.dds", pkg::get_entry_name_by_type(0x12D7));
  EXPECT_EQ("pic1_23.dds", pkg::get_entry_name_by_type(0x12D8));
  EXPECT_EQ("pic1_24.dds", pkg::get_entry_name_by_type(0x12D9));
  EXPECT_EQ("pic1_25.dds", pkg::get_entry_name_by_type(0x12DA));
  EXPECT_EQ("pic1_26.dds", pkg::get_entry_name_by_type(0x12DB));
  EXPECT_EQ("pic1_27.dds", pkg::get_entry_name_by_type(0x12DC));
  EXPECT_EQ("pic1_28.dds", pkg::get_entry_name_by_type(0x12DD));
  EXPECT_EQ("pic1_29.dds", pkg::get_entry_name_by_type(0x12DE));
  EXPECT_EQ("pic1_30.dds", pkg::get_entry_name_by_type(0x12DF));
  EXPECT_EQ("trophy/trophy00.trp", pkg::get_entry_name_by_type(0x1400));
  EXPECT_EQ("trophy/trophy01.trp", pkg::get_entry_name_by_type(0x1401));
  EXPECT_EQ("trophy/trophy02.trp", pkg::get_entry_name_by_type(0x1402));
  EXPECT_EQ("trophy/trophy03.trp", pkg::get_entry_name_by_type(0x1403));
  EXPECT_EQ("trophy/trophy04.trp", pkg::get_entry_name_by_type(0x1404));
  EXPECT_EQ("trophy/trophy05.trp", pkg::get_entry_name_by_type(0x1405));
  EXPECT_EQ("trophy/trophy06.trp", pkg::get_entry_name_by_type(0x1406));
  EXPECT_EQ("trophy/trophy07.trp", pkg::get_entry_name_by_type(0x1407));
  EXPECT_EQ("trophy/trophy08.trp", pkg::get_entry_name_by_type(0x1408));
  EXPECT_EQ("trophy/trophy09.trp", pkg::get_entry_name_by_type(0x1409));
  EXPECT_EQ("trophy/trophy10.trp", pkg::get_entry_name_by_type(0x140A));
  EXPECT_EQ("trophy/trophy11.trp", pkg::get_entry_name_by_type(0x140B));
  EXPECT_EQ("trophy/trophy12.trp", pkg::get_entry_name_by_type(0x140C));
  EXPECT_EQ("trophy/trophy13.trp", pkg::get_entry_name_by_type(0x140D));
  EXPECT_EQ("trophy/trophy14.trp", pkg::get_entry_name_by_type(0x140E));
  EXPECT_EQ("trophy/trophy15.trp", pkg::get_entry_name_by_type(0x140F));
  EXPECT_EQ("trophy/trophy16.trp", pkg::get_entry_name_by_type(0x1410));
  EXPECT_EQ("trophy/trophy17.trp", pkg::get_entry_name_by_type(0x1411));
  EXPECT_EQ("trophy/trophy18.trp", pkg::get_entry_name_by_type(0x1412));
  EXPECT_EQ("trophy/trophy19.trp", pkg::get_entry_name_by_type(0x1413));
  EXPECT_EQ("trophy/trophy20.trp", pkg::get_entry_name_by_type(0x1414));
  EXPECT_EQ("trophy/trophy21.trp", pkg::get_entry_name_by_type(0x1415));
  EXPECT_EQ("trophy/trophy22.trp", pkg::get_entry_name_by_type(0x1416));
  EXPECT_EQ("trophy/trophy23.trp", pkg::get_entry_name_by_type(0x1417));
  EXPECT_EQ("trophy/trophy24.trp", pkg::get_entry_name_by_type(0x1418));
  EXPECT_EQ("trophy/trophy25.trp", pkg::get_entry_name_by_type(0x1419));
  EXPECT_EQ("trophy/trophy26.trp", pkg::get_entry_name_by_type(0x141A));
  EXPECT_EQ("trophy/trophy27.trp", pkg::get_entry_name_by_type(0x141B));
  EXPECT_EQ("trophy/trophy28.trp", pkg::get_entry_name_by_type(0x141C));
  EXPECT_EQ("trophy/trophy29.trp", pkg::get_entry_name_by_type(0x141D));
  EXPECT_EQ("trophy/trophy30.trp", pkg::get_entry_name_by_type(0x141E));
  EXPECT_EQ("trophy/trophy31.trp", pkg::get_entry_name_by_type(0x141F));
  EXPECT_EQ("trophy/trophy32.trp", pkg::get_entry_name_by_type(0x1420));
  EXPECT_EQ("trophy/trophy33.trp", pkg::get_entry_name_by_type(0x1421));
  EXPECT_EQ("trophy/trophy34.trp", pkg::get_entry_name_by_type(0x1422));
  EXPECT_EQ("trophy/trophy35.trp", pkg::get_entry_name_by_type(0x1423));
  EXPECT_EQ("trophy/trophy36.trp", pkg::get_entry_name_by_type(0x1424));
  EXPECT_EQ("trophy/trophy37.trp", pkg::get_entry_name_by_type(0x1425));
  EXPECT_EQ("trophy/trophy38.trp", pkg::get_entry_name_by_type(0x1426));
  EXPECT_EQ("trophy/trophy39.trp", pkg::get_entry_name_by_type(0x1427));
  EXPECT_EQ("trophy/trophy40.trp", pkg::get_entry_name_by_type(0x1428));
  EXPECT_EQ("trophy/trophy41.trp", pkg::get_entry_name_by_type(0x1429));
  EXPECT_EQ("trophy/trophy42.trp", pkg::get_entry_name_by_type(0x142A));
  EXPECT_EQ("trophy/trophy43.trp", pkg::get_entry_name_by_type(0x142B));
  EXPECT_EQ("trophy/trophy44.trp", pkg::get_entry_name_by_type(0x142C));
  EXPECT_EQ("trophy/trophy45.trp", pkg::get_entry_name_by_type(0x142D));
  EXPECT_EQ("trophy/trophy46.trp", pkg::get_entry_name_by_type(0x142E));
  EXPECT_EQ("trophy/trophy47.trp", pkg::get_entry_name_by_type(0x142F));
  EXPECT_EQ("trophy/trophy48.trp", pkg::get_entry_name_by_type(0x1430));
  EXPECT_EQ("trophy/trophy49.trp", pkg::get_entry_name_by_type(0x1431));
  EXPECT_EQ("trophy/trophy50.trp", pkg::get_entry_name_by_type(0x1432));
  EXPECT_EQ("trophy/trophy51.trp", pkg::get_entry_name_by_type(0x1433));
  EXPECT_EQ("trophy/trophy52.trp", pkg::get_entry_name_by_type(0x1434));
  EXPECT_EQ("trophy/trophy53.trp", pkg::get_entry_name_by_type(0x1435));
  EXPECT_EQ("trophy/trophy54.trp", pkg::get_entry_name_by_type(0x1436));
  EXPECT_EQ("trophy/trophy55.trp", pkg::get_entry_name_by_type(0x1437));
  EXPECT_EQ("trophy/trophy56.trp", pkg::get_entry_name_by_type(0x1438));
  EXPECT_EQ("trophy/trophy57.trp", pkg::get_entry_name_by_type(0x1439));
  EXPECT_EQ("trophy/trophy58.trp", pkg::get_entry_name_by_type(0x143A));
  EXPECT_EQ("trophy/trophy59.trp", pkg::get_entry_name_by_type(0x143B));
  EXPECT_EQ("trophy/trophy60.trp", pkg::get_entry_name_by_type(0x143C));
  EXPECT_EQ("trophy/trophy61.trp", pkg::get_entry_name_by_type(0x143D));
  EXPECT_EQ("trophy/trophy62.trp", pkg::get_entry_name_by_type(0x143E));
  EXPECT_EQ("trophy/trophy63.trp", pkg::get_entry_name_by_type(0x143F));
  EXPECT_EQ("trophy/trophy64.trp", pkg::get_entry_name_by_type(0x1440));
  EXPECT_EQ("trophy/trophy65.trp", pkg::get_entry_name_by_type(0x1441));
  EXPECT_EQ("trophy/trophy66.trp", pkg::get_entry_name_by_type(0x1442));
  EXPECT_EQ("trophy/trophy67.trp", pkg::get_entry_name_by_type(0x1443));
  EXPECT_EQ("trophy/trophy68.trp", pkg::get_entry_name_by_type(0x1444));
  EXPECT_EQ("trophy/trophy69.trp", pkg::get_entry_name_by_type(0x1445));
  EXPECT_EQ("trophy/trophy70.trp", pkg::get_entry_name_by_type(0x1446));
  EXPECT_EQ("trophy/trophy71.trp", pkg::get_entry_name_by_type(0x1447));
  EXPECT_EQ("trophy/trophy72.trp", pkg::get_entry_name_by_type(0x1448));
  EXPECT_EQ("trophy/trophy73.trp", pkg::get_entry_name_by_type(0x1449));
  EXPECT_EQ("trophy/trophy74.trp", pkg::get_entry_name_by_type(0x144A));
  EXPECT_EQ("trophy/trophy75.trp", pkg::get_entry_name_by_type(0x144B));
  EXPECT_EQ("trophy/trophy76.trp", pkg::get_entry_name_by_type(0x144C));
  EXPECT_EQ("trophy/trophy77.trp", pkg::get_entry_name_by_type(0x144D));
  EXPECT_EQ("trophy/trophy78.trp", pkg::get_entry_name_by_type(0x144E));
  EXPECT_EQ("trophy/trophy79.trp", pkg::get_entry_name_by_type(0x144F));
  EXPECT_EQ("trophy/trophy80.trp", pkg::get_entry_name_by_type(0x1450));
  EXPECT_EQ("trophy/trophy81.trp", pkg::get_entry_name_by_type(0x1451));
  EXPECT_EQ("trophy/trophy82.trp", pkg::get_entry_name_by_type(0x1452));
  EXPECT_EQ("trophy/trophy83.trp", pkg::get_entry_name_by_type(0x1453));
  EXPECT_EQ("trophy/trophy84.trp", pkg::get_entry_name_by_type(0x1454));
  EXPECT_EQ("trophy/trophy85.trp", pkg::get_entry_name_by_type(0x1455));
  EXPECT_EQ("trophy/trophy86.trp", pkg::get_entry_name_by_type(0x1456));
  EXPECT_EQ("trophy/trophy87.trp", pkg::get_entry_name_by_type(0x1457));
  EXPECT_EQ("trophy/trophy88.trp", pkg::get_entry_name_by_type(0x1458));
  EXPECT_EQ("trophy/trophy89.trp", pkg::get_entry_name_by_type(0x1459));
  EXPECT_EQ("trophy/trophy90.trp", pkg::get_entry_name_by_type(0x145A));
  EXPECT_EQ("trophy/trophy91.trp", pkg::get_entry_name_by_type(0x145B));
  EXPECT_EQ("trophy/trophy92.trp", pkg::get_entry_name_by_type(0x145C));
  EXPECT_EQ("trophy/trophy93.trp", pkg::get_entry_name_by_type(0x145D));
  EXPECT_EQ("trophy/trophy94.trp", pkg::get_entry_name_by_type(0x145E));
  EXPECT_EQ("trophy/trophy95.trp", pkg::get_entry_name_by_type(0x145F));
  EXPECT_EQ("trophy/trophy96.trp", pkg::get_entry_name_by_type(0x1460));
  EXPECT_EQ("trophy/trophy97.trp", pkg::get_entry_name_by_type(0x1461));
  EXPECT_EQ("trophy/trophy98.trp", pkg::get_entry_name_by_type(0x1462));
  EXPECT_EQ("trophy/trophy99.trp", pkg::get_entry_name_by_type(0x1463));
  EXPECT_EQ("trophy/trophy100.trp", pkg::get_entry_name_by_type(0x1464));
  EXPECT_EQ("trophy/trophy101.trp", pkg::get_entry_name_by_type(0x1465));
  EXPECT_EQ("trophy/trophy102.trp", pkg::get_entry_name_by_type(0x1466));
  EXPECT_EQ("trophy/trophy103.trp", pkg::get_entry_name_by_type(0x1467));
  EXPECT_EQ("trophy/trophy104.trp", pkg::get_entry_name_by_type(0x1468));
  EXPECT_EQ("trophy/trophy105.trp", pkg::get_entry_name_by_type(0x1469));
  EXPECT_EQ("trophy/trophy106.trp", pkg::get_entry_name_by_type(0x146A));
  EXPECT_EQ("trophy/trophy107.trp", pkg::get_entry_name_by_type(0x146B));
  EXPECT_EQ("trophy/trophy108.trp", pkg::get_entry_name_by_type(0x146C));
  EXPECT_EQ("trophy/trophy109.trp", pkg::get_entry_name_by_type(0x146D));
  EXPECT_EQ("trophy/trophy110.trp", pkg::get_entry_name_by_type(0x146E));
  EXPECT_EQ("trophy/trophy111.trp", pkg::get_entry_name_by_type(0x146F));
  EXPECT_EQ("trophy/trophy112.trp", pkg::get_entry_name_by_type(0x1470));
  EXPECT_EQ("trophy/trophy113.trp", pkg::get_entry_name_by_type(0x1471));
  EXPECT_EQ("trophy/trophy114.trp", pkg::get_entry_name_by_type(0x1472));
  EXPECT_EQ("trophy/trophy115.trp", pkg::get_entry_name_by_type(0x1473));
  EXPECT_EQ("trophy/trophy116.trp", pkg::get_entry_name_by_type(0x1474));
  EXPECT_EQ("trophy/trophy117.trp", pkg::get_entry_name_by_type(0x1475));
  EXPECT_EQ("trophy/trophy118.trp", pkg::get_entry_name_by_type(0x1476));
  EXPECT_EQ("trophy/trophy119.trp", pkg::get_entry_name_by_type(0x1477));
  EXPECT_EQ("trophy/trophy120.trp", pkg::get_entry_name_by_type(0x1478));
  EXPECT_EQ("trophy/trophy121.trp", pkg::get_entry_name_by_type(0x1479));
  EXPECT_EQ("trophy/trophy122.trp", pkg::get_entry_name_by_type(0x147A));
  EXPECT_EQ("trophy/trophy123.trp", pkg::get_entry_name_by_type(0x147B));
  EXPECT_EQ("trophy/trophy124.trp", pkg::get_entry_name_by_type(0x147C));
  EXPECT_EQ("trophy/trophy125.trp", pkg::get_entry_name_by_type(0x147D));
  EXPECT_EQ("trophy/trophy126.trp", pkg::get_entry_name_by_type(0x147E));
  EXPECT_EQ("trophy/trophy127.trp", pkg::get_entry_name_by_type(0x147F));
  EXPECT_EQ("keymap_rp/001.png", pkg::get_entry_name_by_type(0x1600));
  EXPECT_EQ("keymap_rp/002.png", pkg::get_entry_name_by_type(0x1601));
  EXPECT_EQ("keymap_rp/003.png", pkg::get_entry_name_by_type(0x1602));
  EXPECT_EQ("keymap_rp/004.png", pkg::get_entry_name_by_type(0x1603));
  EXPECT_EQ("keymap_rp/005.png", pkg::get_entry_name_by_type(0x1604));
  EXPECT_EQ("keymap_rp/006.png", pkg::get_entry_name_by_type(0x1605));
  EXPECT_EQ("keymap_rp/007.png", pkg::get_entry_name_by_type(0x1606));
  EXPECT_EQ("keymap_rp/008.png", pkg::get_entry_name_by_type(0x1607));
  EXPECT_EQ("keymap_rp/009.png", pkg::get_entry_name_by_type(0x1608));
  EXPECT_EQ("keymap_rp/010.png", pkg::get_entry_name_by_type(0x1609));
  EXPECT_EQ("keymap_rp/00/001.png", pkg::get_entry_name_by_type(0x1610));
  EXPECT_EQ("keymap_rp/00/002.png", pkg::get_entry_name_by_type(0x1611));
  EXPECT_EQ("keymap_rp/00/003.png", pkg::get_entry_name_by_type(0x1612));
  EXPECT_EQ("keymap_rp/00/004.png", pkg::get_entry_name_by_type(0x1613));
  EXPECT_EQ("keymap_rp/00/005.png", pkg::get_entry_name_by_type(0x1614));
  EXPECT_EQ("keymap_rp/00/006.png", pkg::get_entry_name_by_type(0x1615));
  EXPECT_EQ("keymap_rp/00/007.png", pkg::get_entry_name_by_type(0x1616));
  EXPECT_EQ("keymap_rp/00/008.png", pkg::get_entry_name_by_type(0x1617));
  EXPECT_EQ("keymap_rp/00/009.png", pkg::get_entry_name_by_type(0x1618));
  EXPECT_EQ("keymap_rp/00/010.png", pkg::get_entry_name_by_type(0x1619));
  EXPECT_EQ("keymap_rp/01/001.png", pkg::get_entry_name_by_type(0x161A));
  EXPECT_EQ("keymap_rp/01/002.png", pkg::get_entry_name_by_type(0x161B));
  EXPECT_EQ("keymap_rp/01/003.png", pkg::get_entry_name_by_type(0x161C));
  EXPECT_EQ("keymap_rp/01/004.png", pkg::get_entry_name_by_type(0x161D));
  EXPECT_EQ("keymap_rp/01/005.png", pkg::get_entry_name_by_type(0x161E));
  EXPECT_EQ("keymap_rp/01/006.png", pkg::get_entry_name_by_type(0x161F));
  EXPECT_EQ("keymap_rp/01/007.png", pkg::get_entry_name_by_type(0x1620));
  EXPECT_EQ("keymap_rp/01/008.png", pkg::get_entry_name_by_type(0x1621));
  EXPECT_EQ("keymap_rp/01/009.png", pkg::get_entry_name_by_type(0x1622));
  EXPECT_EQ("keymap_rp/01/010.png", pkg::get_entry_name_by_type(0x1623));
  EXPECT_EQ("keymap_rp/02/001.png", pkg::get_entry_name_by_type(0x1624));
  EXPECT_EQ("keymap_rp/02/002.png", pkg::get_entry_name_by_type(0x1625));
  EXPECT_EQ("keymap_rp/02/003.png", pkg::get_entry_name_by_type(0x1626));
  EXPECT_EQ("keymap_rp/02/004.png", pkg::get_entry_name_by_type(0x1627));
  EXPECT_EQ("keymap_rp/02/005.png", pkg::get_entry_name_by_type(0x1628));
  EXPECT_EQ("keymap_rp/02/006.png", pkg::get_entry_name_by_type(0x1629));
  EXPECT_EQ("keymap_rp/02/007.png", pkg::get_entry_name_by_type(0x162A));
  EXPECT_EQ("keymap_rp/02/008.png", pkg::get_entry_name_by_type(0x162B));
  EXPECT_EQ("keymap_rp/02/009.png", pkg::get_entry_name_by_type(0x162C));
  EXPECT_EQ("keymap_rp/02/010.png", pkg::get_entry_name_by_type(0x162D));
  EXPECT_EQ("keymap_rp/03/001.png", pkg::get_entry_name_by_type(0x162E));
  EXPECT_EQ("keymap_rp/03/002.png", pkg::get_entry_name_by_type(0x162F));
  EXPECT_EQ("keymap_rp/03/003.png", pkg::get_entry_name_by_type(0x1630));
  EXPECT_EQ("keymap_rp/03/004.png", pkg::get_entry_name_by_type(0x1631));
  EXPECT_EQ("keymap_rp/03/005.png", pkg::get_entry_name_by_type(0x1632));
  EXPECT_EQ("keymap_rp/03/006.png", pkg::get_entry_name_by_type(0x1633));
  EXPECT_EQ("keymap_rp/03/007.png", pkg::get_entry_name_by_type(0x1634));
  EXPECT_EQ("keymap_rp/03/008.png", pkg::get_entry_name_by_type(0x1635));
  EXPECT_EQ("keymap_rp/03/009.png", pkg::get_entry_name_by_type(0x1636));
  EXPECT_EQ("keymap_rp/03/010.png", pkg::get_entry_name_by_type(0x1637));
  EXPECT_EQ("keymap_rp/04/001.png", pkg::get_entry_name_by_type(0x1638));
  EXPECT_EQ("keymap_rp/04/002.png", pkg::get_entry_name_by_type(0x1639));
  EXPECT_EQ("keymap_rp/04/003.png", pkg::get_entry_name_by_type(0x163A));
  EXPECT_EQ("keymap_rp/04/004.png", pkg::get_entry_name_by_type(0x163B));
  EXPECT_EQ("keymap_rp/04/005.png", pkg::get_entry_name_by_type(0x163C));
  EXPECT_EQ("keymap_rp/04/006.png", pkg::get_entry_name_by_type(0x163D));
  EXPECT_EQ("keymap_rp/04/007.png", pkg::get_entry_name_by_type(0x163E));
  EXPECT_EQ("keymap_rp/04/008.png", pkg::get_entry_name_by_type(0x163F));
  EXPECT_EQ("keymap_rp/04/009.png", pkg::get_entry_name_by_type(0x1640));
  EXPECT_EQ("keymap_rp/04/010.png", pkg::get_entry_name_by_type(0x1641));
  EXPECT_EQ("keymap_rp/05/001.png", pkg::get_entry_name_by_type(0x1642));
  EXPECT_EQ("keymap_rp/05/002.png", pkg::get_entry_name_by_type(0x1643));
  EXPECT_EQ("keymap_rp/05/003.png", pkg::get_entry_name_by_type(0x1644));
  EXPECT_EQ("keymap_rp/05/004.png", pkg::get_entry_name_by_type(0x1645));
  EXPECT_EQ("keymap_rp/05/005.png", pkg::get_entry_name_by_type(0x1646));
  EXPECT_EQ("keymap_rp/05/006.png", pkg::get_entry_name_by_type(0x1647));
  EXPECT_EQ("keymap_rp/05/007.png", pkg::get_entry_name_by_type(0x1648));
  EXPECT_EQ("keymap_rp/05/008.png", pkg::get_entry_name_by_type(0x1649));
  EXPECT_EQ("keymap_rp/05/009.png", pkg::get_entry_name_by_type(0x164A));
  EXPECT_EQ("keymap_rp/05/010.png", pkg::get_entry_name_by_type(0x164B));
  EXPECT_EQ("keymap_rp/06/001.png", pkg::get_entry_name_by_type(0x164C));
  EXPECT_EQ("keymap_rp/06/002.png", pkg::get_entry_name_by_type(0x164D));
  EXPECT_EQ("keymap_rp/06/003.png", pkg::get_entry_name_by_type(0x164E));
  EXPECT_EQ("keymap_rp/06/004.png", pkg::get_entry_name_by_type(0x164F));
  EXPECT_EQ("keymap_rp/06/005.png", pkg::get_entry_name_by_type(0x1650));
  EXPECT_EQ("keymap_rp/06/006.png", pkg::get_entry_name_by_type(0x1651));
  EXPECT_EQ("keymap_rp/06/007.png", pkg::get_entry_name_by_type(0x1652));
  EXPECT_EQ("keymap_rp/06/008.png", pkg::get_entry_name_by_type(0x1653));
  EXPECT_EQ("keymap_rp/06/009.png", pkg::get_entry_name_by_type(0x1654));
  EXPECT_EQ("keymap_rp/06/010.png", pkg::get_entry_name_by_type(0x1655));
  EXPECT_EQ("keymap_rp/07/001.png", pkg::get_entry_name_by_type(0x1656));
  EXPECT_EQ("keymap_rp/07/002.png", pkg::get_entry_name_by_type(0x1657));
  EXPECT_EQ("keymap_rp/07/003.png", pkg::get_entry_name_by_type(0x1658));
  EXPECT_EQ("keymap_rp/07/004.png", pkg::get_entry_name_by_type(0x1659));
  EXPECT_EQ("keymap_rp/07/005.png", pkg::get_entry_name_by_type(0x165A));
  EXPECT_EQ("keymap_rp/07/006.png", pkg::get_entry_name_by_type(0x165B));
  EXPECT_EQ("keymap_rp/07/007.png", pkg::get_entry_name_by_type(0x165C));
  EXPECT_EQ("keymap_rp/07/008.png", pkg::get_entry_name_by_type(0x165D));
  EXPECT_EQ("keymap_rp/07/009.png", pkg::get_entry_name_by_type(0x165E));
  EXPECT_EQ("keymap_rp/07/010.png", pkg::get_entry_name_by_type(0x165F));
  EXPECT_EQ("keymap_rp/08/001.png", pkg::get_entry_name_by_type(0x1660));
  EXPECT_EQ("keymap_rp/08/002.png", pkg::get_entry_name_by_type(0x1661));
  EXPECT_EQ("keymap_rp/08/003.png", pkg::get_entry_name_by_type(0x1662));
  EXPECT_EQ("keymap_rp/08/004.png", pkg::get_entry_name_by_type(0x1663));
  EXPECT_EQ("keymap_rp/08/005.png", pkg::get_entry_name_by_type(0x1664));
  EXPECT_EQ("keymap_rp/08/006.png", pkg::get_entry_name_by_type(0x1665));
  EXPECT_EQ("keymap_rp/08/007.png", pkg::get_entry_name_by_type(0x1666));
  EXPECT_EQ("keymap_rp/08/008.png", pkg::get_entry_name_by_type(0x1667));
  EXPECT_EQ("keymap_rp/08/009.png", pkg::get_entry_name_by_type(0x1668));
  EXPECT_EQ("keymap_rp/08/010.png", pkg::get_entry_name_by_type(0x1669));
  EXPECT_EQ("keymap_rp/09/001.png", pkg::get_entry_name_by_type(0x166A));
  EXPECT_EQ("keymap_rp/09/002.png", pkg::get_entry_name_by_type(0x166B));
  EXPECT_EQ("keymap_rp/09/003.png", pkg::get_entry_name_by_type(0x166C));
  EXPECT_EQ("keymap_rp/09/004.png", pkg::get_entry_name_by_type(0x166D));
  EXPECT_EQ("keymap_rp/09/005.png", pkg::get_entry_name_by_type(0x166E));
  EXPECT_EQ("keymap_rp/09/006.png", pkg::get_entry_name_by_type(0x166F));
  EXPECT_EQ("keymap_rp/09/007.png", pkg::get_entry_name_by_type(0x1670));
  EXPECT_EQ("keymap_rp/09/008.png", pkg::get_entry_name_by_type(0x1671));
  EXPECT_EQ("keymap_rp/09/009.png", pkg::get_entry_name_by_type(0x1672));
  EXPECT_EQ("keymap_rp/09/010.png", pkg::get_entry_name_by_type(0x1673));
  EXPECT_EQ("keymap_rp/10/001.png", pkg::get_entry_name_by_type(0x1674));
  EXPECT_EQ("keymap_rp/10/002.png", pkg::get_entry_name_by_type(0x1675));
  EXPECT_EQ("keymap_rp/10/003.png", pkg::get_entry_name_by_type(0x1676));
  EXPECT_EQ("keymap_rp/10/004.png", pkg::get_entry_name_by_type(0x1677));
  EXPECT_EQ("keymap_rp/10/005.png", pkg::get_entry_name_by_type(0x1678));
  EXPECT_EQ("keymap_rp/10/006.png", pkg::get_entry_name_by_type(0x1679));
  EXPECT_EQ("keymap_rp/10/007.png", pkg::get_entry_name_by_type(0x167A));
  EXPECT_EQ("keymap_rp/10/008.png", pkg::get_entry_name_by_type(0x167B));
  EXPECT_EQ("keymap_rp/10/009.png", pkg::get_entry_name_by_type(0x167C));
  EXPECT_EQ("keymap_rp/10/010.png", pkg::get_entry_name_by_type(0x167D));
  EXPECT_EQ("keymap_rp/11/001.png", pkg::get_entry_name_by_type(0x167E));
  EXPECT_EQ("keymap_rp/11/002.png", pkg::get_entry_name_by_type(0x167F));
  EXPECT_EQ("keymap_rp/11/003.png", pkg::get_entry_name_by_type(0x1680));
  EXPECT_EQ("keymap_rp/11/004.png", pkg::get_entry_name_by_type(0x1681));
  EXPECT_EQ("keymap_rp/11/005.png", pkg::get_entry_name_by_type(0x1682));
  EXPECT_EQ("keymap_rp/11/006.png", pkg::get_entry_name_by_type(0x1683));
  EXPECT_EQ("keymap_rp/11/007.png", pkg::get_entry_name_by_type(0x1684));
  EXPECT_EQ("keymap_rp/11/008.png", pkg::get_entry_name_by_type(0x1685));
  EXPECT_EQ("keymap_rp/11/009.png", pkg::get_entry_name_by_type(0x1686));
  EXPECT_EQ("keymap_rp/11/010.png", pkg::get_entry_name_by_type(0x1687));
  EXPECT_EQ("keymap_rp/12/001.png", pkg::get_entry_name_by_type(0x1688));
  EXPECT_EQ("keymap_rp/12/002.png", pkg::get_entry_name_by_type(0x1689));
  EXPECT_EQ("keymap_rp/12/003.png", pkg::get_entry_name_by_type(0x168A));
  EXPECT_EQ("keymap_rp/12/004.png", pkg::get_entry_name_by_type(0x168B));
  EXPECT_EQ("keymap_rp/12/005.png", pkg::get_entry_name_by_type(0x168C));
  EXPECT_EQ("keymap_rp/12/006.png", pkg::get_entry_name_by_type(0x168D));
  EXPECT_EQ("keymap_rp/12/007.png", pkg::get_entry_name_by_type(0x168E));
  EXPECT_EQ("keymap_rp/12/008.png", pkg::get_entry_name_by_type(0x168F));
  EXPECT_EQ("keymap_rp/12/009.png", pkg::get_entry_name_by_type(0x1690));
  EXPECT_EQ("keymap_rp/12/010.png", pkg::get_entry_name_by_type(0x1691));
  EXPECT_EQ("keymap_rp/13/001.png", pkg::get_entry_name_by_type(0x1692));
  EXPECT_EQ("keymap_rp/13/002.png", pkg::get_entry_name_by_type(0x1693));
  EXPECT_EQ("keymap_rp/13/003.png", pkg::get_entry_name_by_type(0x1694));
  EXPECT_EQ("keymap_rp/13/004.png", pkg::get_entry_name_by_type(0x1695));
  EXPECT_EQ("keymap_rp/13/005.png", pkg::get_entry_name_by_type(0x1696));
  EXPECT_EQ("keymap_rp/13/006.png", pkg::get_entry_name_by_type(0x1697));
  EXPECT_EQ("keymap_rp/13/007.png", pkg::get_entry_name_by_type(0x1698));
  EXPECT_EQ("keymap_rp/13/008.png", pkg::get_entry_name_by_type(0x1699));
  EXPECT_EQ("keymap_rp/13/009.png", pkg::get_entry_name_by_type(0x169A));
  EXPECT_EQ("keymap_rp/13/010.png", pkg::get_entry_name_by_type(0x169B));
  EXPECT_EQ("keymap_rp/14/001.png", pkg::get_entry_name_by_type(0x169C));
  EXPECT_EQ("keymap_rp/14/002.png", pkg::get_entry_name_by_type(0x169D));
  EXPECT_EQ("keymap_rp/14/003.png", pkg::get_entry_name_by_type(0x169E));
  EXPECT_EQ("keymap_rp/14/004.png", pkg::get_entry_name_by_type(0x169F));
  EXPECT_EQ("keymap_rp/14/005.png", pkg::get_entry_name_by_type(0x16A0));
  EXPECT_EQ("keymap_rp/14/006.png", pkg::get_entry_name_by_type(0x16A1));
  EXPECT_EQ("keymap_rp/14/007.png", pkg::get_entry_name_by_type(0x16A2));
  EXPECT_EQ("keymap_rp/14/008.png", pkg::get_entry_name_by_type(0x16A3));
  EXPECT_EQ("keymap_rp/14/009.png", pkg::get_entry_name_by_type(0x16A4));
  EXPECT_EQ("keymap_rp/14/010.png", pkg::get_entry_name_by_type(0x16A5));
  EXPECT_EQ("keymap_rp/15/001.png", pkg::get_entry_name_by_type(0x16A6));
  EXPECT_EQ("keymap_rp/15/002.png", pkg::get_entry_name_by_type(0x16A7));
  EXPECT_EQ("keymap_rp/15/003.png", pkg::get_entry_name_by_type(0x16A8));
  EXPECT_EQ("keymap_rp/15/004.png", pkg::get_entry_name_by_type(0x16A9));
  EXPECT_EQ("keymap_rp/15/005.png", pkg::get_entry_name_by_type(0x16AA));
  EXPECT_EQ("keymap_rp/15/006.png", pkg::get_entry_name_by_type(0x16AB));
  EXPECT_EQ("keymap_rp/15/007.png", pkg::get_entry_name_by_type(0x16AC));
  EXPECT_EQ("keymap_rp/15/008.png", pkg::get_entry_name_by_type(0x16AD));
  EXPECT_EQ("keymap_rp/15/009.png", pkg::get_entry_name_by_type(0x16AE));
  EXPECT_EQ("keymap_rp/15/010.png", pkg::get_entry_name_by_type(0x16AF));
  EXPECT_EQ("keymap_rp/16/001.png", pkg::get_entry_name_by_type(0x16B0));
  EXPECT_EQ("keymap_rp/16/002.png", pkg::get_entry_name_by_type(0x16B1));
  EXPECT_EQ("keymap_rp/16/003.png", pkg::get_entry_name_by_type(0x16B2));
  EXPECT_EQ("keymap_rp/16/004.png", pkg::get_entry_name_by_type(0x16B3));
  EXPECT_EQ("keymap_rp/16/005.png", pkg::get_entry_name_by_type(0x16B4));
  EXPECT_EQ("keymap_rp/16/006.png", pkg::get_entry_name_by_type(0x16B5));
  EXPECT_EQ("keymap_rp/16/007.png", pkg::get_entry_name_by_type(0x16B6));
  EXPECT_EQ("keymap_rp/16/008.png", pkg::get_entry_name_by_type(0x16B7));
  EXPECT_EQ("keymap_rp/16/009.png", pkg::get_entry_name_by_type(0x16B8));
  EXPECT_EQ("keymap_rp/16/010.png", pkg::get_entry_name_by_type(0x16B9));
  EXPECT_EQ("keymap_rp/17/001.png", pkg::get_entry_name_by_type(0x16BA));
  EXPECT_EQ("keymap_rp/17/002.png", pkg::get_entry_name_by_type(0x16BB));
  EXPECT_EQ("keymap_rp/17/003.png", pkg::get_entry_name_by_type(0x16BC));
  EXPECT_EQ("keymap_rp/17/004.png", pkg::get_entry_name_by_type(0x16BD));
  EXPECT_EQ("keymap_rp/17/005.png", pkg::get_entry_name_by_type(0x16BE));
  EXPECT_EQ("keymap_rp/17/006.png", pkg::get_entry_name_by_type(0x16BF));
  EXPECT_EQ("keymap_rp/17/007.png", pkg::get_entry_name_by_type(0x16C0));
  EXPECT_EQ("keymap_rp/17/008.png", pkg::get_entry_name_by_type(0x16C1));
  EXPECT_EQ("keymap_rp/17/009.png", pkg::get_entry_name_by_type(0x16C2));
  EXPECT_EQ("keymap_rp/17/010.png", pkg::get_entry_name_by_type(0x16C3));
  EXPECT_EQ("keymap_rp/18/001.png", pkg::get_entry_name_by_type(0x16C4));
  EXPECT_EQ("keymap_rp/18/002.png", pkg::get_entry_name_by_type(0x16C5));
  EXPECT_EQ("keymap_rp/18/003.png", pkg::get_entry_name_by_type(0x16C6));
  EXPECT_EQ("keymap_rp/18/004.png", pkg::get_entry_name_by_type(0x16C7));
  EXPECT_EQ("keymap_rp/18/005.png", pkg::get_entry_name_by_type(0x16C8));
  EXPECT_EQ("keymap_rp/18/006.png", pkg::get_entry_name_by_type(0x16C9));
  EXPECT_EQ("keymap_rp/18/007.png", pkg::get_entry_name_by_type(0x16CA));
  EXPECT_EQ("keymap_rp/18/008.png", pkg::get_entry_name_by_type(0x16CB));
  EXPECT_EQ("keymap_rp/18/009.png", pkg::get_entry_name_by_type(0x16CC));
  EXPECT_EQ("keymap_rp/18/010.png", pkg::get_entry_name_by_type(0x16CD));
  EXPECT_EQ("keymap_rp/19/001.png", pkg::get_entry_name_by_type(0x16CE));
  EXPECT_EQ("keymap_rp/19/002.png", pkg::get_entry_name_by_type(0x16CF));
  EXPECT_EQ("keymap_rp/19/003.png", pkg::get_entry_name_by_type(0x16D0));
  EXPECT_EQ("keymap_rp/19/004.png", pkg::get_entry_name_by_type(0x16D1));
  EXPECT_EQ("keymap_rp/19/005.png", pkg::get_entry_name_by_type(0x16D2));
  EXPECT_EQ("keymap_rp/19/006.png", pkg::get_entry_name_by_type(0x16D3));
  EXPECT_EQ("keymap_rp/19/007.png", pkg::get_entry_name_by_type(0x16D4));
  EXPECT_EQ("keymap_rp/19/008.png", pkg::get_entry_name_by_type(0x16D5));
  EXPECT_EQ("keymap_rp/19/009.png", pkg::get_entry_name_by_type(0x16D6));
  EXPECT_EQ("keymap_rp/19/010.png", pkg::get_entry_name_by_type(0x16D7));
  EXPECT_EQ("keymap_rp/20/001.png", pkg::get_entry_name_by_type(0x16D8));
  EXPECT_EQ("keymap_rp/20/002.png", pkg::get_entry_name_by_type(0x16D9));
  EXPECT_EQ("keymap_rp/20/003.png", pkg::get_entry_name_by_type(0x16DA));
  EXPECT_EQ("keymap_rp/20/004.png", pkg::get_entry_name_by_type(0x16DB));
  EXPECT_EQ("keymap_rp/20/005.png", pkg::get_entry_name_by_type(0x16DC));
  EXPECT_EQ("keymap_rp/20/006.png", pkg::get_entry_name_by_type(0x16DD));
  EXPECT_EQ("keymap_rp/20/007.png", pkg::get_entry_name_by_type(0x16DE));
  EXPECT_EQ("keymap_rp/20/008.png", pkg::get_entry_name_by_type(0x16DF));
  EXPECT_EQ("keymap_rp/20/009.png", pkg::get_entry_name_by_type(0x16E0));
  EXPECT_EQ("keymap_rp/20/010.png", pkg::get_entry_name_by_type(0x16E1));
  EXPECT_EQ("keymap_rp/21/001.png", pkg::get_entry_name_by_type(0x16E2));
  EXPECT_EQ("keymap_rp/21/002.png", pkg::get_entry_name_by_type(0x16E3));
  EXPECT_EQ("keymap_rp/21/003.png", pkg::get_entry_name_by_type(0x16E4));
  EXPECT_EQ("keymap_rp/21/004.png", pkg::get_entry_name_by_type(0x16E5));
  EXPECT_EQ("keymap_rp/21/005.png", pkg::get_entry_name_by_type(0x16E6));
  EXPECT_EQ("keymap_rp/21/006.png", pkg::get_entry_name_by_type(0x16E7));
  EXPECT_EQ("keymap_rp/21/007.png", pkg::get_entry_name_by_type(0x16E8));
  EXPECT_EQ("keymap_rp/21/008.png", pkg::get_entry_name_by_type(0x16E9));
  EXPECT_EQ("keymap_rp/21/009.png", pkg::get_entry_name_by_type(0x16EA));
  EXPECT_EQ("keymap_rp/21/010.png", pkg::get_entry_name_by_type(0x16EB));
  EXPECT_EQ("keymap_rp/22/001.png", pkg::get_entry_name_by_type(0x16EC));
  EXPECT_EQ("keymap_rp/22/002.png", pkg::get_entry_name_by_type(0x16ED));
  EXPECT_EQ("keymap_rp/22/003.png", pkg::get_entry_name_by_type(0x16EE));
  EXPECT_EQ("keymap_rp/22/004.png", pkg::get_entry_name_by_type(0x16EF));
  EXPECT_EQ("keymap_rp/22/005.png", pkg::get_entry_name_by_type(0x16F0));
  EXPECT_EQ("keymap_rp/22/006.png", pkg::get_entry_name_by_type(0x16F1));
  EXPECT_EQ("keymap_rp/22/007.png", pkg::get_entry_name_by_type(0x16F2));
  EXPECT_EQ("keymap_rp/22/008.png", pkg::get_entry_name_by_type(0x16F3));
  EXPECT_EQ("keymap_rp/22/009.png", pkg::get_entry_name_by_type(0x16F4));
  EXPECT_EQ("keymap_rp/22/010.png", pkg::get_entry_name_by_type(0x16F5));

  // Invalid
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x1230));
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x12B0));
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x12E0));
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x13FF));
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x1480));
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x15FF));
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x160A));
  EXPECT_EQ("", pkg::get_entry_name_by_type(0x16F6));
}

TEST(pkgTest, extract_sc0) {
  // Empty input arguments
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("", "./tests/files/pkg/outputDirectory/"), "^Error: Empty input path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted empty argument");          // Empty
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0(" ", "./tests/files/pkg/outputDirectory/"), "^Error: Empty input path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument");    // Single space
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("  ", "./tests/files/pkg/outputDirectory/"), "^Error: Empty input path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument");   // Double space
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("\t", "./tests/files/pkg/outputDirectory/"), "^Error: Empty input path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument");   // Single tab
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("\t\t", "./tests/files/pkg/outputDirectory/"), "^Error: Empty input path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument"); // Double tab
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0(nullptr, "./tests/files/pkg/outputDirectory/"), "^basic_string::_M_construct null not valid$", "Accepted nullptr argument");                                   // nullptr

  // Non-existant file
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/doesNotExist.ext", "./tests/files/pkg/outputDirectory/"), "^Error: Input path does not exist or is not a file! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Opened non-existant file");

  // Open non-file object
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/notAFile.ext", "./tests/files/pkg/outputDirectory/"), "^Error: Input path does not exist or is not a file! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Opened non-file object as file");

  // Open file without permission to access
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/noPermission.ext", "./tests/files/pkg/outputDirectory/"), "^Error: Cannot open input file: \\./tests/files/pkg/noPermission\\.ext at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Could \"open\" file without permissions");

  /*
  // Error reading header (size)
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/brokenPkgSize.pkg", "./tests/files/pkg/outputDirectory/"), "^Error: Error reading PKG header! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Error reading PKG header (Size)");

  // File is not a PKG
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/brokenPkgMagic.pkg", "./tests/files/pkg/outputDirectory/"), "^Error: Input path is not a PKG! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Passed file that wasn't a PKG");

  // Error reading entry table
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/brokenPkgEntryTableSize.pkg", "./tests/files/pkg/outputDirectory/"), "^Error: Error reading entry table! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Passed a broken entry table header (Size)");

  // Empty output arguments
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/valid.pkg", ""), "^Error: Empty output path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted empty argument");          // Empty
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/valid.pkg", " "), "^Error: Empty output path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument");    // Single space
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/valid.pkg", "  "), "^Error: Empty output path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument");   // Double space
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/valid.pkg", "\t"), "^Error: Empty output path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument");   // Single tab
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/valid.pkg", "\t\t"), "^Error: Empty output path argument! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Accepted whitespace argument"); // Double tab
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/valid.pkg", nullptr), "^basic_string::_M_construct null not valid$", "Accepted nullptr argument");                                    // nullptr

  // Unable to open/create output directory
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/valid.pkg", "./tests/files/pkg/notADirectory.ext"), "^Error: Unable to open/create output directory at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Able to open/create output directory");

  // Error reading entry data
  EXPECT_EXCEPTION_REGEX(pkg::extract_sc0("./tests/files/pkg/brokenPkgEntrySize.pkg", "./tests/files/pkg/outputDirectory/"), "^Error: Error reading entry data! at \"pkg\\.cpp\":\\d*:\\(extract_sc0\\)$", "Passed broken entry data");
  */

  // TODO: Unable to open/create output subdirectory

  // TODO: Cannot open file:

  // TODO: Success and verify files with known layout/digests
}

#endif // PKG_TEST_HPP_
